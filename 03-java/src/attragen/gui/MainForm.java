/*
 * MainForm.java
 *
 * Created on 2010-02-06, 16:09:46
 */

package attragen.gui;

import attragen.core.BeginEvent;
import attragen.core.CompositeEvent;
import attragen.core.FinishEvent;
import attragen.core.GenerateEvent;
import attragen.core.Generator;
import attragen.core.GeneratorListener;
import attragen.core.StepEvent;
import attragen.renderers.*;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.geom.Point2D;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.JColorChooser;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author evol
 */
public class MainForm extends AbstractGeneratorForm {

    private DataForm dataform;
    private ProfileForm profileform;
    private PreviewForm previewform;
    private AnimationForm animationform;

    //public Generator gen;
    public BufferedImage buffer;

    /** Creates new form MainForm */
    public MainForm() {
        dataform = new DataForm();
        profileform = new ProfileForm();
        previewform = new PreviewForm();
        animationform = new AnimationForm();
        gen = new Generator();

        dataform.setParentForm(this);
        profileform.setParentForm(this);
        previewform.setParentForm(this);
        animationform.setParentForm(this);
        
        initComponents();

        // Setup the generator
        gen.addEventListener(new GeneratorListener() {
            @Override public void initialized(BeginEvent evt) {
                statusLabel.setText("Sprawdzanie atraktorów...");
                progress.setValue(0);
            }
            @Override public void stepOccured(StepEvent evt) {
                progress.setMaximum(evt.getMaxIterations());
                progress.setValue(evt.getProgress());
                previewform.panel.repaint();
            }
            @Override public void generationStarted(GenerateEvent evt) {
                statusLabel.setText("Generowanie atraktora...");
                progress.setValue(0);
            }
            @Override public void compositingStarted(CompositeEvent evt) {
                statusLabel.setText("Kolorowanie...");
                progress.setValue(0);
            }
            @Override public void finished(FinishEvent evt) {
                statusLabel.setText("Gotowe");
                progress.setValue(0);
                previewform.panel.repaint();
            }
        });

        // Setup the save dialog
        fcDialog.setCurrentDirectory(new File(System.getProperty("user.dir")));
        fcDialog.addChoosableFileFilter(new ImageFilter());

        // Populate the combobox
        try {
            String[] profiles = Profile.getProfiles();
            for (String profile: profiles) {
                cbProfile.addItem(profile);
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), this.getTitle(), JOptionPane.ERROR_MESSAGE);
        }
    }

    @Override public void abortGeneration() {
        if (!gen.isRunning()) return;

        statusLabel.setText("Przerwano");
        progress.setValue(0);
        gen.abort();
    }

    public void initializeGenerator() {
        if (gen.isRunning()) return;

        Dimension res = profileform.getResolution();
        gen.setResolution(res.width, res.height);
        gen.setQuality(profileform.getQuality() * 0.01);
        gen.setCompositeLevel(profileform.getCompositeLevel());
        gen.setBaseColor(pColor.getBackground());

        buffer = (BufferedImage)createImage(res.width, res.height);

        Renderer renderer;
        switch (cbStyle.getSelectedIndex()) {
            // Neon
            case 0:
            default: renderer = new ImageRenderer(buffer); break;
            // Papier
            case 1: renderer = new InvertedImageRenderer(buffer); break;
        }

        gen.setRenderer(renderer);
        previewform.panel.setImage(buffer);
        previewform.setVisible(true);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fcDialog = new javax.swing.JFileChooser();
        statusPanel = new javax.swing.JPanel();
        progress = new javax.swing.JProgressBar();
        statusLabel = new javax.swing.JLabel();
        mainPanel = new javax.swing.JPanel();
        bData = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        bProfiles = new javax.swing.JButton();
        cbProfile = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        lColor = new javax.swing.JLabel();
        bGenerate = new javax.swing.JButton();
        bAbort = new javax.swing.JButton();
        bSave = new javax.swing.JButton();
        bClear = new javax.swing.JButton();
        bLoadData = new javax.swing.JButton();
        cbStyle = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        bColor = new javax.swing.JButton();
        pColor = new javax.swing.JPanel();
        bAnimate = new javax.swing.JButton();

        fcDialog.setDialogTitle("Zapisz obrazek");
        fcDialog.setDialogType(javax.swing.JFileChooser.SAVE_DIALOG);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Generator dziwnych atraktorów");
        setResizable(false);

        statusLabel.setText("Gotowe");

        org.jdesktop.layout.GroupLayout statusPanelLayout = new org.jdesktop.layout.GroupLayout(statusPanel);
        statusPanel.setLayout(statusPanelLayout);
        statusPanelLayout.setHorizontalGroup(
            statusPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(statusPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(statusLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 176, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(progress, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE)
                .addContainerGap())
        );
        statusPanelLayout.setVerticalGroup(
            statusPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, statusPanelLayout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(statusPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(progress, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(statusLabel))
                .addContainerGap())
        );

        bData.setText("Wybierz...");
        bData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bDataActionPerformed(evt);
            }
        });

        jLabel1.setLabelFor(bData);
        jLabel1.setText("Dane:");

        bProfiles.setText("Edytuj...");
        bProfiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bProfilesActionPerformed(evt);
            }
        });

        cbProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbProfileActionPerformed(evt);
            }
        });

        jLabel2.setLabelFor(cbProfile);
        jLabel2.setText("Profil:");

        lColor.setLabelFor(cbProfile);
        lColor.setText("Kolor:");

        bGenerate.setText("Generuj");
        bGenerate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bGenerateActionPerformed(evt);
            }
        });

        bAbort.setText("Przerwij");
        bAbort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAbortActionPerformed(evt);
            }
        });

        bSave.setText("Zapisz obrazek...");
        bSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSaveActionPerformed(evt);
            }
        });

        bClear.setText("Wyczyść");
        bClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bClearActionPerformed(evt);
            }
        });

        bLoadData.setText("Z atraktora");
        bLoadData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bLoadDataActionPerformed(evt);
            }
        });

        cbStyle.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Neon", "Papier" }));

        jLabel3.setText("Styl:");

        bColor.setText("Wybierz...");
        bColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bColorActionPerformed(evt);
            }
        });

        pColor.setBackground(new java.awt.Color(255, 0, 0));
        pColor.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        org.jdesktop.layout.GroupLayout pColorLayout = new org.jdesktop.layout.GroupLayout(pColor);
        pColor.setLayout(pColorLayout);
        pColorLayout.setHorizontalGroup(
            pColorLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 22, Short.MAX_VALUE)
        );
        pColorLayout.setVerticalGroup(
            pColorLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 23, Short.MAX_VALUE)
        );

        bAnimate.setText("Animacja...");
        bAnimate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAnimateActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout mainPanelLayout = new org.jdesktop.layout.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(mainPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(mainPanelLayout.createSequentialGroup()
                        .add(jLabel1)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 16, Short.MAX_VALUE)
                        .add(bLoadData)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(bClear)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(bData)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(bAnimate))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, mainPanelLayout.createSequentialGroup()
                        .add(jLabel2)
                        .add(18, 18, 18)
                        .add(cbProfile, 0, 272, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(bProfiles))
                    .add(mainPanelLayout.createSequentialGroup()
                        .add(bGenerate)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(bAbort)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 132, Short.MAX_VALUE)
                        .add(bSave))
                    .add(mainPanelLayout.createSequentialGroup()
                        .add(mainPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel3)
                            .add(lColor))
                        .add(mainPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, mainPanelLayout.createSequentialGroup()
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(bColor)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(pColor, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(mainPanelLayout.createSequentialGroup()
                                .add(10, 10, 10)
                                .add(cbStyle, 0, 361, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(mainPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(bAnimate)
                    .add(bData)
                    .add(bClear)
                    .add(bLoadData))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(mainPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(bProfiles)
                    .add(cbProfile, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel2))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(mainPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(mainPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(lColor)
                        .add(bColor, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE))
                    .add(pColor, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(mainPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(cbStyle, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel3))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(mainPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(bGenerate)
                    .add(bAbort)
                    .add(bSave)))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(mainPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, statusPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .add(mainPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(statusPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bDataActionPerformed
        dataform.setVisible(true);
    }//GEN-LAST:event_bDataActionPerformed

    private void bClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bClearActionPerformed
        dataform.clearData();
    }//GEN-LAST:event_bClearActionPerformed

    private void bProfilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bProfilesActionPerformed
        profileform.setVisible(true);
    }//GEN-LAST:event_bProfilesActionPerformed

    private void cbProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbProfileActionPerformed
        profileform.cbProfile.setSelectedIndex(cbProfile.getSelectedIndex());
    }//GEN-LAST:event_cbProfileActionPerformed

    private void bGenerateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bGenerateActionPerformed
        if (gen.isRunning()) return;

        gen.setFormula(dataform.getFormula());
        previewform.setTitle("Atraktor - " + dataform.getFormula());

        gen.setParameters(dataform.getParameters());

        if (dataform.validStartPoint())
            gen.setStartPoint(dataform.getStartPoint());

        initializeGenerator();

        new Thread(gen, "Generator").start();
    }//GEN-LAST:event_bGenerateActionPerformed

    private void bAbortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAbortActionPerformed
        abortGeneration();
    }//GEN-LAST:event_bAbortActionPerformed

    private void bLoadDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bLoadDataActionPerformed
        if (!gen.isFirstRun() && !gen.isRunning()) {
            dataform.setParameters(gen.getParameters());
            dataform.setStartPoint(gen.getStartPoint());
        }
    }//GEN-LAST:event_bLoadDataActionPerformed

    private void bSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSaveActionPerformed
        int result = fcDialog.showSaveDialog(this);

        if (result == JFileChooser.APPROVE_OPTION) {
            File f = fcDialog.getSelectedFile();

            String path = f.getPath();
            if (!path.endsWith(".png")) path += ".png";

            f = new File(path);

            try {
                ImageIO.write(buffer, "png", f);
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, "Nie można było zapisać obrazka.", this.getTitle(), JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_bSaveActionPerformed

    private void bColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bColorActionPerformed
        Color col = JColorChooser.showDialog(this, "Wybierz kolor", pColor.getBackground());
        if (col != null) {
            pColor.setBackground(col);
        }
    }//GEN-LAST:event_bColorActionPerformed

    private void bAnimateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAnimateActionPerformed
        animationform.setVisible(true);
    }//GEN-LAST:event_bAnimateActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAbort;
    private javax.swing.JButton bAnimate;
    private javax.swing.JButton bClear;
    private javax.swing.JButton bColor;
    private javax.swing.JButton bData;
    private javax.swing.JButton bGenerate;
    private javax.swing.JButton bLoadData;
    private javax.swing.JButton bProfiles;
    private javax.swing.JButton bSave;
    public javax.swing.JComboBox cbProfile;
    private javax.swing.JComboBox cbStyle;
    private javax.swing.JFileChooser fcDialog;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel lColor;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JPanel pColor;
    private javax.swing.JProgressBar progress;
    private javax.swing.JLabel statusLabel;
    private javax.swing.JPanel statusPanel;
    // End of variables declaration//GEN-END:variables

}
